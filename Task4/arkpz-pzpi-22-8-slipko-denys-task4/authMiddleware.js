const jwt = require("jsonwebtoken");

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞)
function authMiddleware(req, res, next) {
    const authHeader = req.headers.authorization;
    if (!authHeader) {
        console.log("‚ùå –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
        return res.status(401).json({ error: "–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è" });
    }

    const token = authHeader.split(" ")[1];
    try {
        req.user = jwt.verify(token, process.env.JWT_SECRET || "supersecretkey");
        console.log("‚úÖ –¢–æ–∫–µ–Ω –ø—Ä–∏–Ω—è—Ç:", req.user);
        next();
    } catch (error) {
        console.log("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:", error.message);
        res.status(401).json({ error: "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω" });
    }
}

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±—ã—á–Ω—ã–º —é–∑–µ—Ä–æ–º –∏–ª–∏ –∞–¥–º–∏–Ω–æ–º
function isUser(req, res, next) {
    if (!req.user || (req.user.role !== "user" && req.user.role !== "admin")) {
        console.log("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å user –∏–ª–∏ admin");
        return res.status(403).json({ error: "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω" });
    }
    console.log("‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", req.user.username);
    next();
}

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
function isAdmin(req, res, next) {
    if (!req.user || req.user.role !== "admin") {
        console.log("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å admin");
        return res.status(403).json({ error: "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω" });
    }
    console.log("‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω: –∞–¥–º–∏–Ω", req.user.username);
    next();
}

module.exports = { authMiddleware, isUser, isAdmin };
